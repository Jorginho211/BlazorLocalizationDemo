@page "/fetchdata"
@inject HttpClient Http
@inject IStringLocalizer<App> Localizer

<PageTitle>@Localizer["FetchDataTitle"]</PageTitle>

<h1>@Localizer["FetchDataTitle"]</h1>

<p>@Localizer["FetchDataSubtitle"]</p>

@if (forecasts == null)
{
    <p>
        <em>@Localizer["Loading"]...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>@Localizer["FetchDataDate"]</th>
            <th>@Localizer["FetchDataTempC"]</th>
            <th>@Localizer["FetchDataTempF"]</th>
            <th>@Localizer["FetchDataSummary"]</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}